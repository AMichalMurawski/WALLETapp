{"version":3,"file":"static/css/938.8e1f4379.chunk.css","mappings":"AAAA,MACE,mBAAqB,CACrB,sBAAwB,CACxB,2CAA2D,CAC3D,uBAA0C,CAC1C,yBAAyC,CACzC,wBAAwC,CACxC,0BAAyC,CAEzC,4BAA+C,CAC/C,+CAAsD,CAEtD,oCAAoD,CACpD,sCAAqD,CAGpD,gCAAiC,CACjC,iEAAsE,CACtE,qCAAqD,CACrD,yBAAyC,CAGzC,gCAA+C,CAC/C,+BAA+C,CAC/C,8BAA8C,CAE9C,mCAAsD,CACtD,6CAAkD,CAElD,6BAA2C,CAG5C,8CAAqD,CACrD,6CAAkD,CAClD,4BAA6B,CAC7B,yCAA0C,CAC1C,wCAAyC,CAExC,yBAA0B,CAC1B,wBAAsC,CAEtC,qBAAwC,CACxC,uBAAqC,CAErC,sDAA2D,CAC3D,qDAA0D,CAE1D,+BAA2C,CAC3C,gCAA2C,CAE3C,8BAA0C,CAC1C,+BAAyC,CAE1C,kCAAkD,CAClD,qCAA4C,CAG5C,6BAAgD,CAChD,0CAAiD,CAG/C,cAAe,CACf,cAAe,CACf,gBAAiB,CC/DrB,EAEE,cADA,oBACA,CAGF,GACE,gBAGF,uBAIE,cAFA,iBADA,gBAIA,aAFA,UAEA,CCZF,uBCmFE,aA2BE,sBD7G8B,CAC9B,WAAgB,CAGhB,6BACI,yBAGA,mBAAkB,CADlB,kBADA,WAEmB,CAGvB,6BAIA,sBACA,yBAHA,kBEqFA,eAVE,gBF5EF,WAIA,CAGA,8BAEE,4BAEF,4BAEE,4BAKF,0BAEC,wBAAuB,CADvB,YACwB,CAGrB,6BAEI,kBE6DR,eAVE,eAUF,CF1DI,gCAEQ,6BADA,WACA","sources":["stylesheets/utils/_colors.scss","stylesheets/components/_global.scss","components/Home/Home.module.scss","stylesheets/utils/_flex.scss","stylesheets/utils/_font.scss"],"sourcesContent":[":root {\n  --text-primary: black;\n  --text-alernative: white;\n  --text-placeholder-input-grey-color: rgba(189, 189, 189, 1);\n  --text-white-color: rgba(255, 255, 255, 1);\n  --text-grey-color: rgba(166, 166, 166, 1);\n  --text-red-color: rgba(255, 101, 150, 1);\n  --text-green-color: rgba(36, 204, 167, 1);\n\n  --main-background-color: rgba(255, 255, 255, 1);\n  --secondary-background-color: rgba(255, 255, 255, 0.4);\n\n  --right-side-red-line-status: rgba(255, 101, 150, 1);\n  --right-side-green-line-status: rgba(36, 204, 167, 1);\n   // icons\n\n   --main-accent-color-blue: #4a56e2;\n   --main-accent-filter: drop-shadow(0px 3px 10px rgba(74, 86, 226, 0.5));\n   --secondary-accent-color-blue: rgba(110, 120, 232, 1);\n   --grey-color-icon: rgba(189, 189, 189, 1);\n \n   // Modal window\n   --text-modal-green-color: rgba(36, 204, 167, 1);\n   --text-modal-grey-color: rgba(224, 224, 224, 1);\n   --text-modal-red-color: rgba(255, 101, 150, 1);\n \n   --modal-background-color-white: rgba(255, 255, 255, 1);\n   --modal-background-color-grey: rgba(0, 0, 0, 0.25);\n \n   --modal-currency-blue: rgba(74, 86, 226, 1);\n    // Dropdown\n\n  --background-color-dropdown: rgba(255, 255, 255, 0.7);\n  --shadow-dropdown: 0px 6px 15px rgba(0, 0, 0, 0.1);\n  --filter-dropdown: blur(25px);\n  --backgroud-color-dropdown-second: #f6f0ef;\n  --filter-dropdown-display-none: blur(2px);\n   // Buttons\n   --btn-green-color: #24cca7;\n   --btn-blue-color: rgba(74, 86, 226, 1);\n \n   --btn-text-white: rgba(255, 255, 255, 1);\n   --btn-text-blue: rgba(74, 86, 226, 1);\n \n   --green-circle-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n   --red-circle-shadow: 0px 6px 15px rgba(255, 101, 150, 0.5);\n \n   --btn-green-color-hover: rgb(115, 248, 219);\n   --btn-green-color-active: rgb(38, 177, 147);\n \n   --btn-blue-color-hover: rgb(124, 133, 235);\n   --btn-blue-color-active: rgb(29, 41, 177);\n     // table\n  --grey-bottom-border-table: rgba(220, 220, 223, 1);\n  --box-shadow-table: rgba(255, 255, 255, 0.6);\n\n  // Backgrounds\n  --background-white-color: rgba(255, 255, 255, 1);\n  --background-grey-color: rgba(255, 255, 255, 0.4);\n\n    // Adaptive width\n    --mobile: 480px;\n    --tablet: 768px;\n    --desktop: 1280px;\n\n  // --textShadow-primary: 2px 2px 2px black;\n\n  // --link-primary: rgb(193, 152, 30);\n  // --link-secondary: rgb(255, 229, 151);\n\n  // --bg-primary: rgb(255, 247, 224);\n  // --bg-secondary: rgb(248, 236, 198);\n\n  // --bgShadow-primary: linear-gradient(\n  //   rgba(175, 174, 173, 0.3),\n  //   rgba(175, 174, 173, 0.3)\n  // );\n  // --bgShadow-secondary: linear-gradient(\n  //   rgba(175, 174, 173, 0.15),\n  //   rgba(175, 174, 173, 0.15)\n  // );\n\n  // --border-primary: rgb(255, 220, 107);\n}\n","a {\n  text-decoration: none;\n  color: inherit;\n}\n\nul {\n  list-style: none;\n}\n\n.container {\n  min-width: 320px;\n  max-width: 1280px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 15px;\n}\n","@import '../../stylesheets/vars';\n\n.statsMain {\n  @include flex-display(null,null,center);\n    margin:46px 46px;\n    }\n    \n    .statsMain table {\n        border-collapse: collapse;\n        width: 715px;\n        text-align: center;\n        border-spacing:20px;\n    \n    }\n    .statsMain thead {\n    height: 58px;\n    font-family: Circe;\n    @include font-type(bold, text-medium);\n    background-color: white;\n    border-collapse: collapse;    \n    \n    }\n    td:first-child,\n    th:first-child {\n      border-radius: 30px 0 0 30px;\n    }\n    td:last-child,\n    th:last-child {\n      border-radius: 0 30px 30px 0;\n    }\n    \n    \n    \n    .statsMain th {\n     padding:20px;\n     border-collapse:collapse;\n        }\n    \n        .statsMain tbody {\n           \n            font-family: Circe;\n            @include font-type(normal,text-normal);\n            }\n        .statsMain tbody tr {\n                height: 58px;\n                border-top: 1px #DCDCDF solid;\n                   \n                }\n    ","// Sposób użycia:\n//   w klasie kontenera:\n//     @include flex-display($direction, $gapVal, $justify, $align, $gapRow, $gapCol)\n//       gdzie:\n//         $direction - kierunek rozmieszczenia elementów (none, wrap, row, column)\n//         $gapVal - wartość właściwości gap (value, null)\n//         $justify - opcjonalne rozmieszczenie wzdłuż głównej osi (wartości justify-content)\n//         $align - opcjonalne rozmieszczenie wzdłuż osi poprzecznej (wartości aling-items),\n//                 aby podać wartość $align należy podać wartość $justify (przynajmniej null)\n//         $gapRow - wartość właściwości row-gap (value, null)\n//         $gapCol - wartość właściwości column-gap (value, null)\n\n//   w klasie elementu [dla użytego w rodzicu @include flex(wrap, $gapVal, ...)]:\n//     @include flex-basis($elementNr, $gapVal)\n//       gdzie:\n//         $elementNr - ilość elementów w linii\n//         $gapVal - wartość $gapVal rodzica\n\n// Przykłady użycia:\n//   dla siatki elementów:\n//     .selektor-rodzic {\n//       @include flex-display(wrap, 30px);\n//     }\n//     .selektor-element {\n//       @include flex-basis(4, 30px);\n//     }\n\n//   dla rozmieszczenia w linii poziomej wycentrowane tylko w poziomie:\n//     .selektor-rodzic {\n//       @include flex-display(row, 50px, null, center);\n//     }\n\n//   dla rozmieszczenia w linii pionowej wycentrowane tylko w pionie:\n//     .selektor-rodzic {\n//       @include flex-display(column, 40px, center);\n//     }\n\n// Zaleca się dla elementów, które będą siatką w mediach dla tabletów i desktopów\n//   użyć również dla komórek $direction: wrap i dla elementów podać $elementNr: 1.\n//   Pozwoli to na nieduplikowanie @include flex() w rodzicu.\n//   Warunkiem jest aby wartość gap była stała dla wszystkich mediów.\n\n@import './error';\n\n$justifyContent: (\n  null,\n  center,\n  space-between,\n  space-around,\n  start,\n  end,\n  flex-start,\n  flex-end,\n  left right\n);\n\n$alignItems: (\n  null,\n  normal,\n  stretch,\n  center,\n  start,\n  end,\n  flex-start,\n  flex-end,\n  baseline,\n  first baseline,\n  last baseline,\n  safe center,\n  unsafe center,\n  inherit,\n  initial,\n  revert,\n  revert-layer,\n  unset\n);\n\n@mixin display(\n  $direction: null,\n  $gapVal: null,\n  $justify: null,\n  $align: null,\n  $gapRow: null,\n  $gapCol: null\n) {\n  display: flex;\n  @if $direction == wrap {\n    flex-wrap: $direction;\n  } @else if index(column row null, $direction) {\n    flex-direction: $direction;\n  } @else {\n    @include error('errFlex');\n  }\n  @if type-of($gapVal) == 'number' and index('px' 'em' 'rem', unit($gapVal)) {\n    gap: $gapVal;\n  } @else if $gapVal == null {\n  } @else {\n    @include error('errFlex');\n  }\n  @if type-of($gapRow) == 'number' and index('px' 'em' 'rem', unit($gapRow)) {\n    row-gap: $gapRow;\n  } @else if $gapRow == null {\n  } @else {\n    @include error('errFlex');\n  }\n  @if type-of($gapCol) == 'number' and index('px' 'em' 'rem', unit($gapCol)) {\n    column-gap: $gapCol;\n  } @else if $gapCol == null {\n  } @else {\n    @include error('errFlex');\n  }\n  @if index($justifyContent, $justify) {\n    justify-content: $justify;\n  } @else {\n    @include error('errFlex');\n  }\n  @if index($alignItems, $align) {\n    align-items: $align;\n  } @else {\n    @include error('errFlex');\n  }\n}\n\n@mixin basis($elementNr, $gapVal) {\n  $check: 1;\n  @if type-of($elementNr) == 'number' and index('', unit($elementNr)) {\n  } @else {\n    $check: 0;\n  }\n  @if type-of($gapVal) == 'number' and index('px' 'em' 'rem', unit($gapVal)) {\n  } @else {\n    $check: 0;\n  }\n  @if $check == 1 {\n    flex-basis: calc((100% - #{$gapVal * ($elementNr - 1)}) / #{$elementNr});\n  } @else {\n    @include error('errFlex');\n  }\n}\n","// Sposób użycia:\n//   @include font-type($weight, $size, $height, $spacing)\n//     gdzie:\n//       $weight - wartość font-weight w jednostkach 100-900\n//       $size - wartość font-size w px / em / rem\n//       $height - wartość line-height w mnożniku\n//       $spacing - wartość letter-spacing w jednostkach em\n//     Wszystkie zmienne są opcjonalne.\n//       Jeśli nie ma potrzeby użyć zmiennej należy wprowadzić wartość null.\n//       Jeśli nie używane są ostatnie zmienne można nie wprowadzać wartości.\n\n// Przykłady użycia:\n//   == letter-spacing takie samo jak w body / przodku\n//     .selektor {\n//       @include font-type(700, 32px, 1.5)\n//     }\n\n//   == font-weight i line-height takie samo jak w body / przodku\n//     .selektor {\n//       @include font-type(null, text-large, null, 0.02em)\n//     }\n\n//   == wszystkie elementy czcionki wprowadzone jako zmienne [nie zalecane używanie]\n//     .selektor {\n//       @include font-type(bold, header-normal, medium, large)\n//     }\n\n@import './error';\n\n$fontWeight: (\n  'normal': 400,\n  'medium': 500,\n  'bold': 700,\n  'black': 900,\n);\n@function getWeight($val) {\n  @return map-get($fontWeight, $val);\n}\n\n$fontSize: (\n  'text-little': 12px,\n  'text-small': 14px,\n  'text-normal': 16px,\n  'text-medium': 18px,\n  'text-big': 20px,\n  'text-height': 24px,\n  'text-large': 28px,\n  'header-normal': 32px,\n  'header-medium': 36px,\n  'header-big': 40px,\n  'header-height': 48px,\n  'header-large': 60px,\n);\n@function getSize($val) {\n  @return map-get($fontSize, $val);\n}\n\n$fontHeight: (\n  'little': 1.13,\n  'small': 1.25,\n  'normal': 1.5,\n  'medium': 1.75,\n  'big': 2,\n  'height': 2.5,\n  'large': 3,\n);\n@function getHeight($val) {\n  @return map-get($fontHeight, $val);\n}\n\n$fontSpacing: (\n  'small': 0.02em,\n  'normal': 0.03em,\n  'medium': 0.04em,\n  'big': 0.05em,\n  'large': 0.06em,\n);\n@function getSpacing($val) {\n  @return map-get($fontSpacing, $val);\n}\n\n@mixin type($weight: null, $size: null, $height: null, $spacing: null) {\n  $fontWeights: (100, 200, 300, 400, 500, 600, 700, 800, 900);\n  @if type-of($weight) == 'number' and index('', unit($weight)) {\n    @if index($fontWeights, $weight) {\n      font-weight: $weight;\n    } @else {\n      @include error('errText');\n    }\n  } @else {\n    @if #{getWeight($weight)} != '' {\n      font-weight: #{getWeight($weight)};\n    } @else if $weight == null {\n    } @else {\n      @include error('errText');\n    }\n  }\n\n  @if type-of($size) == 'number' and index('px' 'em' 'rem', unit($size)) {\n    font-size: #{$size};\n  } @else if #{getSize($size)} != '' {\n    font-size: getSize($size);\n  } @else if $size == null {\n  } @else {\n    @include error('errText');\n  }\n\n  @if type-of($height) == 'number' and index('', unit($height)) {\n    line-height: $height;\n  } @else if #{getHeight($height)} != '' {\n    line-height: getHeight($height);\n  } @else if $height == null {\n  } @else {\n    @include error('errText');\n  }\n\n  @if type-of($spacing) == 'number' and index('em', unit($spacing)) {\n    letter-spacing: $spacing;\n  } @else if #{getSpacing($spacing)} != '' {\n    letter-spacing: getSpacing($spacing);\n  } @else if $spacing == null {\n  } @else {\n    @include error('errText');\n  }\n}\n"],"names":[],"sourceRoot":""}